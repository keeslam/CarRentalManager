# Full-stack nixpacks.toml - Frontend build + Backend server in één container

[variables]
NIXPACKS_NODE_VERSION = "18"
NODE_ENV = "production"
PORT = "3000"

# Installatie: beide dependencies
[phases.install]
cmds = [
  "npm ci --omit=dev",                 # Root (backend) dependencies
  "if [ -d 'client' ]; then cd client && npm ci --omit=dev && cd .. && echo '✅ Frontend dependencies installed'; else echo '⚠️ No client/ dir - skipping frontend deps'; fi"
]

# Build: Frontend bouwen + Backend compileren
[phases.build]
cmds = [
  # Debug structuur (tijdelijk - verwijder later)
  "echo '=== PROJECT STRUCTURE ==='",
  "ls -la",
  "find . -name 'package.json' -type f",
  "echo '=== END STRUCTURE ==='",
  
  # Frontend build (als client/ bestaat)
  "if [ -d 'client' ]; then ",
  "  echo 'Building frontend...'",
  "  cd client && npm run build",
  "  echo 'Copying frontend to backend static path...'",
  "  mkdir -p ../dist/public",  # Backend verwacht /dist/public
  "  cp -r dist/* ../dist/public/ 2>/dev/null || cp -r build/* ../dist/public/ 2>/dev/null",
  "  cd ..",
  "  echo '✅ Frontend built and copied to dist/public'",
  "else ",
  "  echo '⚠️ No client/ directory - skipping frontend build'",
  "fi",
  
  # Backend build (TypeScript → JavaScript)
  "echo 'Building backend...'",
  "npm run build",  # Compileert src/ → dist/
  "echo '✅ Backend built'"
]

# Start: Backend server (serveert automatisch frontend static files)
[start]
cmd = "npm start"  # Of "node dist/server/index.js" - wat je package.json heeft
